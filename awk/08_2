#!/bin/awk -f

NR == 1 {
	split($0, lrs, "")
	FS = "[ =(),]+"
}
NR != 1 && NF > 2 {
	instruction_set[$1] = $2 OFS $3
	if (substr($1, 3) == "A") {
		starting_nodes[$1] = $2 OFS $3
	}
}
END {
	for (k in starting_nodes) {
		result = lcm(result, cycle(k, k))
	}
	print result
}

function lcm(a, b) {
	if (a == 0) return b
	return int((a * b) / gcd(a, b))
}

function gcd(a, b,		t) {
	while (b != 0) {
		t = b
		b = a % b
		a = t
	}
	return a
}

function cycle(inst, cur, ind,		lr, step, lr_inst, zfind, zloop) {
	while ( substr(cur, 3) != "Z" ) {
		if (ind == length(lrs)) ind = 0
		lr = lrs[++ind]
		split(instruction_set[cur], lr_inst)
		cur = lr_inst[lr == "L" ? 1 : 2]
		step++
	}
	return step
}

